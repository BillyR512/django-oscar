language: python

env:
  global:
    # $TRANSIFEX_PASSWORD for oscar_bot (used in transifex.sh)
    secure: FuIlzEsGJiAwhaIRBmRNsq9eXmuzs25fX6BChknW4lDyVAySWMp0+Zps9Bd0JgfFYUG3Ip+OTmksYIoTUsG25ZJS9cq1IFt3QKUAN70YCI/4ZBLeIdICPEyxq+Km179+NeEXmBUug17RLMLxh3MWfO+RKUHK9yHIPNNpq0dNyoo=

matrix:
  include:
    - python: "2.7"
      env: DJANGO_VERSION=1.5.8
    - python: "2.7"
      env: DJANGO_VERSION=1.6.5
    - python: "3.3"
      env: DJANGO_VERSION=1.5.8 SKIP_DEMO_SITE=1
    - python: "3.3"
      env: DJANGO_VERSION=1.6.5 SKIP_DEMO_SITE=1
    - python: "3.4"
      env: DJANGO_VERSION=1.5.8 SKIP_DEMO_SITE=1
    - python: "3.4"
      env: DJANGO_VERSION=1.6.5 SKIP_DEMO_SITE=1

install:
  - easy_install Django==$DJANGO_VERSION

before_script:
    # Create testing databases for running migrations against
  - mysql -e 'create database oscar_vagrant;'
  - psql -c 'create database oscar_vagrant;' -U postgres
    #Â Create database for building demo site
  - psql -c 'create database oscar_demo;' -U postgres
  - psql -c 'CREATE EXTENSION postgis; CREATE EXTENSION postgis_topology;' -U postgres -d oscar_demo

script: make travis

after_success:
  - coveralls
  - ./transifex.sh
